前情回顾

1. IO  模型

   阻塞IO    非阻塞IO    IO多路复用

2. 阻塞IO

   阻塞原因： 阻塞函数   传输过程阻塞

   效率低  使用简单

3. 非阻塞IO

   将阻塞--》不阻塞

   setblocking()
   settimeout() 超时检测

4. IO多路复用

   利用系统监控IO
   哪个IO需要处理（应用层处理时函数不会阻塞）返回给应用层
   应用层判断是那个IO可以处理，进行对应处理操作


   sock  connfd1  connfd2 .....

   对比：
   select : 跨平台好  同时监控IO数量1024  效率不高
   epoll  : 只支持Linux  同时监控IO无限制 效率高



练习01：
将网页 my.html 通过浏览器访问显示出来

web server 服务程序

技术点： tcp  http协议    select

写一个类完成功能封装

面向对象，进行代码设计

cookie：










